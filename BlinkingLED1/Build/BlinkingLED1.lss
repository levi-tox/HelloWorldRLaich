
C:\m242\proj\HelloWorldRLaich\BlinkingLED1\Build\BlinkingLED1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000280  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000023  00800100  00800100  000002f4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002f4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000324  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00000360  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001538  00000000  00000000  00000450  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a68  00000000  00000000  00001988  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000726  00000000  00000000  000023f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002cc  00000000  00000000  00002b18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000859  00000000  00000000  00002de4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bcf  00000000  00000000  0000363d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  0000420c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 a9 00 	jmp	0x152	; 0x152 <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e8       	ldi	r30, 0x80	; 128
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a3 32       	cpi	r26, 0x23	; 35
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 3e 01 	jmp	0x27c	; 0x27c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:

}

int main(void)
{
    Usart_Init(250000); // higher is to fast; cannot be consumed reliably anymore!
  a6:	60 e9       	ldi	r22, 0x90	; 144
  a8:	70 ed       	ldi	r23, 0xD0	; 208
  aa:	83 e0       	ldi	r24, 0x03	; 3
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	0e 94 8e 00 	call	0x11c	; 0x11c <Usart_Init>



void ConfigPins(Bool status) {

    SetRegister(PortB.DDR, (PIN_3, DdrOutput), (PIN_4, DdrOutput), (PIN_5, DdrInput));
  b2:	88 e1       	ldi	r24, 0x18	; 24
  b4:	84 b9       	out	0x04, r24	; 4
    SetRegister(PortB.PORT, (PIN_3, status), (PIN_4, 0));
  b6:	15 b8       	out	0x05, r1	; 5

int main(void)
{
    Usart_Init(250000); // higher is to fast; cannot be consumed reliably anymore!

    Bool status = False;
  b8:	c0 e0       	ldi	r28, 0x00	; 0
    while (True)
    {

        Usart_Trace0(1);

        status = !status;
  ba:	d1 e0       	ldi	r29, 0x01	; 1
  bc:	10 e0       	ldi	r17, 0x00	; 0
    ConfigPins(status);

    while (True)
    {

        Usart_Trace0(1);
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	0e 94 16 01 	call	0x22c	; 0x22c <Usart_Trace0>

        status = !status;
  c6:	8d 2f       	mov	r24, r29
  c8:	c1 11       	cpse	r28, r1
  ca:	81 2f       	mov	r24, r17
  cc:	c8 2f       	mov	r28, r24

        UpdateRegister(PortB.PORT, (PIN_3, status));
  ce:	25 b1       	in	r18, 0x05	; 5
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	88 0f       	add	r24, r24
  d4:	99 1f       	adc	r25, r25
  d6:	88 0f       	add	r24, r24
  d8:	99 1f       	adc	r25, r25
  da:	88 0f       	add	r24, r24
  dc:	99 1f       	adc	r25, r25
  de:	88 70       	andi	r24, 0x08	; 8
  e0:	92 2f       	mov	r25, r18
  e2:	97 7f       	andi	r25, 0xF7	; 247
  e4:	89 2b       	or	r24, r25
  e6:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e8:	2f ef       	ldi	r18, 0xFF	; 255
  ea:	83 ed       	ldi	r24, 0xD3	; 211
  ec:	90 e3       	ldi	r25, 0x30	; 48
  ee:	21 50       	subi	r18, 0x01	; 1
  f0:	80 40       	sbci	r24, 0x00	; 0
  f2:	90 40       	sbci	r25, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x48>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x52>
  f8:	00 00       	nop
  fa:	e1 cf       	rjmp	.-62     	; 0xbe <main+0x18>

000000fc <EnterAtomic>:
  fc:	f8 94       	cli
  fe:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_enterAtomicNesting>
 102:	8f 5f       	subi	r24, 0xFF	; 255
 104:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_enterAtomicNesting>
 108:	08 95       	ret

0000010a <LeaveAtomic>:
 10a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_enterAtomicNesting>
 10e:	81 50       	subi	r24, 0x01	; 1
 110:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_enterAtomicNesting>
 114:	81 11       	cpse	r24, r1
 116:	01 c0       	rjmp	.+2      	; 0x11a <LeaveAtomic+0x10>
 118:	78 94       	sei
 11a:	08 95       	ret

0000011c <Usart_Init>:
 11c:	9b 01       	movw	r18, r22
 11e:	ac 01       	movw	r20, r24
 120:	60 e4       	ldi	r22, 0x40	; 64
 122:	72 e4       	ldi	r23, 0x42	; 66
 124:	8f e0       	ldi	r24, 0x0F	; 15
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	0e 94 1c 01 	call	0x238	; 0x238 <__udivmodsi4>
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	31 09       	sbc	r19, r1
 130:	e0 ec       	ldi	r30, 0xC0	; 192
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	35 83       	std	Z+5, r19	; 0x05
 136:	24 83       	std	Z+4, r18	; 0x04
 138:	88 e1       	ldi	r24, 0x18	; 24
 13a:	81 83       	std	Z+1, r24	; 0x01
 13c:	8e e0       	ldi	r24, 0x0E	; 14
 13e:	82 83       	std	Z+2, r24	; 0x02
 140:	08 95       	ret

00000142 <Usart_PutChar>:
 142:	e0 ec       	ldi	r30, 0xC0	; 192
 144:	f0 e0       	ldi	r31, 0x00	; 0
 146:	90 81       	ld	r25, Z
 148:	95 ff       	sbrs	r25, 5
 14a:	fd cf       	rjmp	.-6      	; 0x146 <Usart_PutChar+0x4>
 14c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 150:	08 95       	ret

00000152 <__vector_18>:
 152:	1f 92       	push	r1
 154:	0f 92       	push	r0
 156:	0f b6       	in	r0, 0x3f	; 63
 158:	0f 92       	push	r0
 15a:	11 24       	eor	r1, r1
 15c:	2f 93       	push	r18
 15e:	8f 93       	push	r24
 160:	9f 93       	push	r25
 162:	af 93       	push	r26
 164:	bf 93       	push	r27
 166:	ef 93       	push	r30
 168:	ff 93       	push	r31
 16a:	e0 ec       	ldi	r30, 0xC0	; 192
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	19 c0       	rjmp	.+50     	; 0x1a2 <__vector_18+0x50>
 170:	26 81       	ldd	r18, Z+6	; 0x06
 172:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <USART_rxBufferIn>
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	01 96       	adiw	r24, 0x01	; 1
 17a:	8f 71       	andi	r24, 0x1F	; 31
 17c:	90 78       	andi	r25, 0x80	; 128
 17e:	99 23       	and	r25, r25
 180:	24 f4       	brge	.+8      	; 0x18a <__vector_18+0x38>
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	80 6e       	ori	r24, 0xE0	; 224
 186:	9f 6f       	ori	r25, 0xFF	; 255
 188:	01 96       	adiw	r24, 0x01	; 1
 18a:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_end>
 18e:	89 17       	cp	r24, r25
 190:	41 f0       	breq	.+16     	; 0x1a2 <__vector_18+0x50>
 192:	a0 91 01 01 	lds	r26, 0x0101	; 0x800101 <USART_rxBufferIn>
 196:	b0 e0       	ldi	r27, 0x00	; 0
 198:	ad 5f       	subi	r26, 0xFD	; 253
 19a:	be 4f       	sbci	r27, 0xFE	; 254
 19c:	2c 93       	st	X, r18
 19e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <USART_rxBufferIn>
 1a2:	80 81       	ld	r24, Z
 1a4:	88 23       	and	r24, r24
 1a6:	24 f3       	brlt	.-56     	; 0x170 <__vector_18+0x1e>
 1a8:	ff 91       	pop	r31
 1aa:	ef 91       	pop	r30
 1ac:	bf 91       	pop	r27
 1ae:	af 91       	pop	r26
 1b0:	9f 91       	pop	r25
 1b2:	8f 91       	pop	r24
 1b4:	2f 91       	pop	r18
 1b6:	0f 90       	pop	r0
 1b8:	0f be       	out	0x3f, r0	; 63
 1ba:	0f 90       	pop	r0
 1bc:	1f 90       	pop	r1
 1be:	18 95       	reti

000001c0 <Usart_PutShort>:
 1c0:	cf 93       	push	r28
 1c2:	c8 2f       	mov	r28, r24
 1c4:	89 2f       	mov	r24, r25
 1c6:	0e 94 a1 00 	call	0x142	; 0x142 <Usart_PutChar>
 1ca:	8c 2f       	mov	r24, r28
 1cc:	0e 94 a1 00 	call	0x142	; 0x142 <Usart_PutChar>
 1d0:	cf 91       	pop	r28
 1d2:	08 95       	ret

000001d4 <Usart_TraceN>:
 1d4:	ef 92       	push	r14
 1d6:	ff 92       	push	r15
 1d8:	0f 93       	push	r16
 1da:	1f 93       	push	r17
 1dc:	cf 93       	push	r28
 1de:	df 93       	push	r29
 1e0:	ec 01       	movw	r28, r24
 1e2:	e6 2e       	mov	r14, r22
 1e4:	f7 2e       	mov	r15, r23
 1e6:	14 2f       	mov	r17, r20
 1e8:	0e 94 7e 00 	call	0xfc	; 0xfc <EnterAtomic>
 1ec:	85 ea       	ldi	r24, 0xA5	; 165
 1ee:	0e 94 a1 00 	call	0x142	; 0x142 <Usart_PutChar>
 1f2:	81 2f       	mov	r24, r17
 1f4:	88 6a       	ori	r24, 0xA8	; 168
 1f6:	0e 94 a1 00 	call	0x142	; 0x142 <Usart_PutChar>
 1fa:	ce 01       	movw	r24, r28
 1fc:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <Usart_PutShort>
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	c1 0f       	add	r28, r17
 204:	11 16       	cp	r1, r17
 206:	4c f4       	brge	.+18     	; 0x21a <Usart_TraceN+0x46>
 208:	0e 2d       	mov	r16, r14
 20a:	1f 2d       	mov	r17, r15
 20c:	f8 01       	movw	r30, r16
 20e:	81 91       	ld	r24, Z+
 210:	8f 01       	movw	r16, r30
 212:	0e 94 a1 00 	call	0x142	; 0x142 <Usart_PutChar>
 216:	c1 50       	subi	r28, 0x01	; 1
 218:	c8 f7       	brcc	.-14     	; 0x20c <Usart_TraceN+0x38>
 21a:	0e 94 85 00 	call	0x10a	; 0x10a <LeaveAtomic>
 21e:	df 91       	pop	r29
 220:	cf 91       	pop	r28
 222:	1f 91       	pop	r17
 224:	0f 91       	pop	r16
 226:	ff 90       	pop	r15
 228:	ef 90       	pop	r14
 22a:	08 95       	ret

0000022c <Usart_Trace0>:
 22c:	40 e0       	ldi	r20, 0x00	; 0
 22e:	60 e0       	ldi	r22, 0x00	; 0
 230:	70 e0       	ldi	r23, 0x00	; 0
 232:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <Usart_TraceN>
 236:	08 95       	ret

00000238 <__udivmodsi4>:
 238:	a1 e2       	ldi	r26, 0x21	; 33
 23a:	1a 2e       	mov	r1, r26
 23c:	aa 1b       	sub	r26, r26
 23e:	bb 1b       	sub	r27, r27
 240:	fd 01       	movw	r30, r26
 242:	0d c0       	rjmp	.+26     	; 0x25e <__udivmodsi4_ep>

00000244 <__udivmodsi4_loop>:
 244:	aa 1f       	adc	r26, r26
 246:	bb 1f       	adc	r27, r27
 248:	ee 1f       	adc	r30, r30
 24a:	ff 1f       	adc	r31, r31
 24c:	a2 17       	cp	r26, r18
 24e:	b3 07       	cpc	r27, r19
 250:	e4 07       	cpc	r30, r20
 252:	f5 07       	cpc	r31, r21
 254:	20 f0       	brcs	.+8      	; 0x25e <__udivmodsi4_ep>
 256:	a2 1b       	sub	r26, r18
 258:	b3 0b       	sbc	r27, r19
 25a:	e4 0b       	sbc	r30, r20
 25c:	f5 0b       	sbc	r31, r21

0000025e <__udivmodsi4_ep>:
 25e:	66 1f       	adc	r22, r22
 260:	77 1f       	adc	r23, r23
 262:	88 1f       	adc	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	1a 94       	dec	r1
 268:	69 f7       	brne	.-38     	; 0x244 <__udivmodsi4_loop>
 26a:	60 95       	com	r22
 26c:	70 95       	com	r23
 26e:	80 95       	com	r24
 270:	90 95       	com	r25
 272:	9b 01       	movw	r18, r22
 274:	ac 01       	movw	r20, r24
 276:	bd 01       	movw	r22, r26
 278:	cf 01       	movw	r24, r30
 27a:	08 95       	ret

0000027c <_exit>:
 27c:	f8 94       	cli

0000027e <__stop_program>:
 27e:	ff cf       	rjmp	.-2      	; 0x27e <__stop_program>
